storage: /verdaccio/storage/data
plugins: /verdaccio/plugins

auth:
  htpasswd:
    file: ./htpasswd
  openid-connect:
    publicUrl: http://localhost:4873
    redisUri: redis
    # issuer: https://login.microsoftonline.com/e9a60b1d-b1a0-45c3-b518-3aa5bec6d54c/wsfed
    issuer: https://login.microsoftonline.com/e9a60b1d-b1a0-45c3-b518-3aa5bec6d54c/v2.0/.well-known/openid-configuration
    clientId: ...client_id-here
    clientSecret: ...client_secret-here
    scope: 'openid profile email offline_access'
    usernameClaim: preferred_username
    # optional roles claim (id_token).
    # claim can be array or string (comma-separated)
    # rolesClaim: roles

web:
  title: Verdaccio

uplinks:
  npmjs:
    url: https://registry.npmjs.org/

## uncomment to use modern jwt token system ( https://verdaccio.org/docs/configuration/#security )
#
# security:
#   api:
#     jwt:
#       sign:
#         # lifetime for [cli-to-verdaccio service] jwt tokens that link to oidc server tokens (using sid claim).
#         # oidc server tokens lifetime (set by oidc server) check as usual after check [cli-to-verdaccio service] jwt token sign and expiration.
#         # if oidc server returns refresh_token, oidc access_token will refresh when expired.
#         expiresIn: 30d
#   web:
#     sign:
#       expiresIn: 7d

packages:
  '@*/*':
    # scoped packages
    access: $all
    publish: $authenticated
  '**':
    access: $all
    publish: $authenticated

middlewares:
  audit:
    enabled: true
logs:
  - {type: stdout, format: pretty, level: debug}
